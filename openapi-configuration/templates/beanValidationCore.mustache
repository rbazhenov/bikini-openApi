{{! template is copied from openapi-generator:5.4.0 \JavaSpring\beanValidationCore.mustache
but @Pattern generation is disabled for date type}}
{{! changed}}{{#pattern}}{{^isByteArray}}{{^isDate}}@Pattern(regexp = "{{{pattern}}}") {{/isDate}}{{/isByteArray}}{{/pattern}}{{! changed}}

{{!minLength && maxLength set. disabled for date type}}
{{^isDate}}{{#minLength}}{{#maxLength}}@Size(min = {{minLength}}, max = {{maxLength}}) {{/maxLength}}{{/minLength}}{{/isDate}}
{{!minLength set, maxLength not. disabled for date type}}
{{^isDate}}{{#minLength}}{{^maxLength}}@Size(min = {{minLength}}) {{/maxLength}}{{/minLength}}{{/isDate}}
{{!minLength not set, maxLength set. disabled for date type}}
{{^isDate}}{{^minLength}}{{#maxLength}}@Size(max = {{.}}) {{/maxLength}}{{/minLength}}{{/isDate}}
{{!@Size: minItems && maxItems set}}
{{#minItems}}{{#maxItems}}@Size(min = {{minItems}}, max = {{maxItems}}) {{/maxItems}}{{/minItems}}
{{!@Size: minItems set, maxItems not}}
{{#minItems}}{{^maxItems}}@Size(min = {{minItems}}) {{/maxItems}}{{/minItems}}
{{!@Size: minItems not set && maxItems set}}
{{^minItems}}{{#maxItems}}@Size(max = {{.}}) {{/maxItems}}{{/minItems}}
{{!@Email: useBeanValidation set && isEmail && java8 set}}
{{#useBeanValidation}}{{#isEmail}}{{#java8}}@javax.validation.constraints.Email{{/java8}}{{/isEmail}}{{/useBeanValidation}}
{{!@Email: performBeanValidation set && isEmail && not java8 set}}
{{#performBeanValidation}}{{#isEmail}}{{^java8}}@org.hibernate.validator.constraints.Email{{/java8}}{{/isEmail}}{{/performBeanValidation}}
{{!check for integer or long / all others=decimal type with @Decimal*is Integer set }}
{{#isInteger}}{{#minimum}}@Min({{.}}) {{/minimum}}{{#maximum}}@Max({{.}}) {{/maximum}}{{/isInteger}}
{{!isLong set}}
{{#isLong}}{{#minimum}}@Min({{.}}L) {{/minimum}}{{#maximum}}@Max({{.}}L) {{/maximum}}{{/isLong}}
{{!Not Integer, not Long => we have a decimal value!}}
{{^isInteger}}{{^isLong}}{{#minimum}}@DecimalMin({{#exclusiveMinimum}}value = {{/exclusiveMinimum}}"{{minimum}}"{{#exclusiveMinimum}}, inclusive = false{{/exclusiveMinimum}}) {{/minimum}}{{#maximum}}@DecimalMax({{#exclusiveMaximum}}value = {{/exclusiveMaximum}}"{{maximum}}"{{#exclusiveMaximum}}, inclusive = false{{/exclusiveMaximum}}) {{/maximum}}{{/isLong}}{{/isInteger}}
