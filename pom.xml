<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>bikini-openApi</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>API modules</name>

    <parent>
        <groupId>www.ru</groupId>
        <artifactId>example-bom</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <properties>
        <openApi.default.suffix>open</openApi.default.suffix>
        <openApi.default.package>${project.parent.groupId}.${openApi.default.suffix}</openApi.default.package>
        <xsd.default.package>${project.parent.groupId}.xsd.${openApi.default.suffix}</xsd.default.package>
        <openApi.java.language>spring</openApi.java.language>
        <openApi.ts.language>typescript-fetch</openApi.ts.language>
        <openApi.ts.out>generated-ts-sources</openApi.ts.out>
        <openApi.ts.skip>true</openApi.ts.skip>
        <openApi.ts.es6>true</openApi.ts.es6>
        <openApi.in.file>api.yaml</openApi.in.file>
        <openApi.out.file>api-all-in-one.json</openApi.out.file>
    </properties>

    <modules>
        <module>bikini-bottom-api</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>openapi-generator</artifactId>
            <version>${openapi-generator-version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>${jackson-databind-nullable.version}</version>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.openapitools</groupId>
                    <artifactId>openapi-generator-maven-plugin</artifactId>
                    <version>${openapi-generator-version}</version>
                    <executions>
                        <execution>
                            <id>java</id>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                            <configuration>
                                <inputSpec>${project.basedir}/${openApi.in.file}</inputSpec>
                                <generatorName>${openApi.java.language}</generatorName>
                                <output>${project.build.directory}/generated-java-sources</output>
                                <apiPackage>${openApi.default.package}.api</apiPackage>
                                <modelPackage>${openApi.default.package}.model</modelPackage>
                                <invokerPackage>${openApi.default.package}.handler</invokerPackage>
                                <templateDirectory>
                                    ../openapi-configuration/templates
                                </templateDirectory>
                                <configOptions>
                                    <dateLibrary>java8</dateLibrary>
                                    <library>spring-cloud</library>
                                    <microprofileFramework>kumuluzee</microprofileFramework>
                                    <hideGenerationTimestamp>true</hideGenerationTimestamp>
                                    <interfaceOnly>true</interfaceOnly>
                                    <openApiNullable>false</openApiNullable>
                                    <requestMappingMode>none</requestMappingMode>
                                </configOptions>
                            </configuration>
                        </execution>
                        <execution>
                            <id>typescript</id>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                            <configuration>
                                <skip>${openApi.ts.skip}</skip>
                                <inputSpec>${project.basedir}/${openApi.in.file}</inputSpec>
                                <generatorName>${openApi.ts.language}</generatorName>
                                <output>${project.build.directory}/${openApi.ts.out}</output>
                                <apiPackage>${openApi.default.package}.api</apiPackage>
                                <configHelp>false</configHelp>
                                <modelPackage>${openApi.default.package}.model</modelPackage>
                                <invokerPackage>${openApi.default.package}.handler</invokerPackage>
                                <configOptions>
                                    <hideGenerationTimestamp>true</hideGenerationTimestamp>
                                    <interfaceOnly>false</interfaceOnly>
                                    <openApiNullable>false</openApiNullable>
                                    <npmName>@css/${project.artifactId}</npmName>
                                    <npmVersion>
                                        ${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}-${env.BUILD_COUNTER}
                                    </npmVersion>
                                    <supportsES6>${openApi.ts.es6}</supportsES6>
                                </configOptions>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
<!--                <plugin>-->
<!--                    <groupId>org.codehaus.mojo</groupId>-->
<!--                    <artifactId>exec-maven-plugin</artifactId>-->
<!--                    <version>${exec-maven-plugin.version}</version>-->
<!--                    <executions>-->
<!--                        <execution>-->
<!--                            <id>npm install</id>-->
<!--                            <phase>compile</phase>-->
<!--                            <goals>-->
<!--                                <goal>exec</goal>-->
<!--                            </goals>-->
<!--                            <configuration>-->
<!--                                <arguments>-->
<!--                                    <argument>&#45;&#45;globalconfig</argument>-->
<!--                                    <argument>${maven.multiModuleProjectDirectory}${file.separator}.npmrc</argument>-->
<!--                                    <argument>install</argument>-->
<!--                                </arguments>-->
<!--                            </configuration>-->
<!--                        </execution>-->
<!--                        <execution>-->
<!--                            <id>npm publish</id>-->
<!--                            <phase>deploy</phase>-->
<!--                            <goals>-->
<!--                                <goal>exec</goal>-->
<!--                            </goals>-->
<!--                            <configuration>-->
<!--                                <arguments>-->
<!--                                    <argument>&#45;&#45;globalconfig</argument>-->
<!--                                    <argument>${maven.multiModuleProjectDirectory}${file.separator}.npmrc</argument>-->
<!--                                    <argument>publish</argument>-->
<!--                                </arguments>-->
<!--                            </configuration>-->
<!--                        </execution>-->
<!--                    </executions>-->
<!--                    <configuration>-->
<!--                        <skip>${openApi.ts.skip}</skip>-->
<!--                        <executable>npm</executable>-->
<!--                        <workingDirectory>${project.build.directory}/${openApi.ts.out}</workingDirectory>-->
<!--                    </configuration>-->
<!--                </plugin>-->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.vesion}</version>
                    <executions>
                        <execution>
                            <id>parse-version</id>
                            <goals>
                                <goal>parse-version</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>jaxb2-maven-plugin</artifactId>
                    <version>${jaxb2-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>xsd-to-java</id>
                            <goals>
                                <goal>xjc</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <packageName>${xsd.default.package}</packageName>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>io.swagger.codegen.v3</groupId>
                    <artifactId>swagger-codegen-maven-plugin</artifactId>
                    <version>${swagger-codegen-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                            <configuration>
                                <inputSpec>${project.basedir}/${openApi.in.file}</inputSpec>
                                <language>openapi</language>
                                <output>${project.basedir}/tyk</output>
                                <configOptions>
                                    <outputFile>${openApi.out.file}</outputFile>
                                </configOptions>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven-source-plugin.version}</version>
            </plugin>
        </plugins>
    </build>
</project>